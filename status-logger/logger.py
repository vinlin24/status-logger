"""logger.py

Handles logging as well as sending an email report upon error.
"""

import os
import smtplib
import sys
import traceback
from datetime import date, datetime
from email.message import EmailMessage

from . import ensure_file_path
from .secrets import ERROR_EMAIL, ERROR_EMAIL_PASSWORD

LOG_FILE_PATH = os.path.join(os.path.expanduser("~"),
                             ".config/status-logger/status-logger.log")


def _get_traceback(error: Exception) -> str:
    """Return the traceback of the error as a string."""
    return "".join(traceback.format_exception(error))


def _get_error_message(error: Exception) -> str:
    """Generate the string to log and body of email to send."""
    header = "An error occurred:"
    tb = _get_traceback(error)

    # file -> package -> repo
    repo_path = os.path.dirname(os.path.dirname(__file__))
    footer = ("This message was automatically generated by the status-logger "
              f"program running locally at {repo_path}.")

    return "\n".join((header, tb, footer))


def log_exit_status(error: Exception | None) -> None:
    """Log the termination status to the program log file.

    Args:
        error (Exception | None): Exception instance of the error that
        was raised in the program. None if the program did not
        encounter any errors.
    """
    entry = f"[{datetime.now()}] "
    if error is None:
        entry += "No errors detected.\n"
    else:
        entry += _get_error_message(error) + "\n"

    ensure_file_path(LOG_FILE_PATH)
    with open(LOG_FILE_PATH, "at", encoding="utf-8") as fp:
        fp.write(entry)


def send_error_email(error: Exception) -> None:
    print("Error detected, preparing to send email...")
    content = _get_error_message(error)

    # Construct email object
    message = EmailMessage()
    message.set_content(content)
    message["Subject"] = f"Error in status-logger program {date.today()}"
    message["From"] = ERROR_EMAIL
    message["To"] = ERROR_EMAIL

    # Send email to self through Outlook server
    # https://www.arclab.com/en/kb/email/list-of-smtp-and-imap-servers-mailserver-list.html
    host, port = "smtp-mail.outlook.com", 587
    try:
        with smtplib.SMTP(host, port) as smtp:
            smtp.starttls()
            smtp.login(user=ERROR_EMAIL, password=ERROR_EMAIL_PASSWORD)
            smtp.send_message(message)
    except smtplib.SMTPException as exc:
        message = f"Failed to send email: {exc}"
        sys.stderr.write(message)
        entry = f"[{datetime.now()}] {message}\n"
        with open(LOG_FILE_PATH, "at", encoding="utf-8") as log:
            log.write(entry)
    else:
        print("Email sent successfully.")
